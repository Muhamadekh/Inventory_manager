"""empty message

Revision ID: 6826551ec65d
Revises: 
Create Date: 2023-07-06 16:32:10.032859

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6826551ec65d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('debtor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('company_name', sa.String(length=80), nullable=False),
    sa.Column('phone_number', sa.String(length=80), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=False),
    sa.Column('unpaid_amount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_cost_price', sa.Integer(), nullable=False),
    sa.Column('item_selling_price', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=80), nullable=False),
    sa.Column('phone_number', sa.String(length=80), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=False),
    sa.Column('unpaid_amount', sa.Integer(), nullable=False),
    sa.Column('supply_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('user_role', sa.String(length=30), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('shop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('shopkeeper', sa.String(length=100), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_name')
    )
    op.create_table('store',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_name', sa.String(length=60), nullable=False),
    sa.Column('location', sa.String(length=60), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_name')
    )
    op.create_table('sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sales_value', sa.Integer(), nullable=False),
    sa.Column('sales_discount', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=80), nullable=False),
    sa.Column('transaction_id', sa.String(length=60), nullable=True),
    sa.Column('date_sold', sa.DateTime(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('debtor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['debtor_id'], ['debtor.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('item_value', sa.Integer(), nullable=False),
    sa.Column('item_status', sa.String(length=20), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shopkeeper',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_in',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_out',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('date_sent', sa.DateTime(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('is_received', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_received',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('date_received', sa.DateTime(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shop.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('store_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('item_value', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('stock_status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_count',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shop_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shop_item_id'], ['shop_item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_sold',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('item_discount', sa.Integer(), nullable=False),
    sa.Column('item_value', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sale.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_sold')
    op.drop_table('daily_count')
    op.drop_table('store_item')
    op.drop_table('stock_received')
    op.drop_table('stock_out')
    op.drop_table('stock_in')
    op.drop_table('shopkeeper')
    op.drop_table('shop_item')
    op.drop_table('sale')
    op.drop_table('store')
    op.drop_table('shop')
    op.drop_table('user')
    op.drop_table('supplier')
    op.drop_table('item')
    op.drop_table('debtor')
    # ### end Alembic commands ###
